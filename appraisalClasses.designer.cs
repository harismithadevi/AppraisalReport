#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Appraisal
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="pcsa107")]
	public partial class appraisalClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLogin(Login instance);
    partial void UpdateLogin(Login instance);
    partial void DeleteLogin(Login instance);
    partial void InsertGeneralInfo(GeneralInfo instance);
    partial void UpdateGeneralInfo(GeneralInfo instance);
    partial void DeleteGeneralInfo(GeneralInfo instance);
    partial void InsertAchievement(Achievement instance);
    partial void UpdateAchievement(Achievement instance);
    partial void DeleteAchievement(Achievement instance);
    #endregion
		
		public appraisalClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["pcsa107ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public appraisalClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public appraisalClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public appraisalClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public appraisalClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Login> Logins
		{
			get
			{
				return this.GetTable<Login>();
			}
		}
		
		public System.Data.Linq.Table<GeneralInfo> GeneralInfos
		{
			get
			{
				return this.GetTable<GeneralInfo>();
			}
		}
		
		public System.Data.Linq.Table<Achievement> Achievements
		{
			get
			{
				return this.GetTable<Achievement>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Login")]
	public partial class Login : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmpID;
		
		private string _Password;
		
		private EntityRef<GeneralInfo> _GeneralInfo;
		
		private EntityRef<Achievement> _Achievement;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmpIDChanging(string value);
    partial void OnEmpIDChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public Login()
		{
			this._GeneralInfo = default(EntityRef<GeneralInfo>);
			this._Achievement = default(EntityRef<Achievement>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(20)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_GeneralInfo", Storage="_GeneralInfo", ThisKey="EmpID", OtherKey="EmpID", IsUnique=true, IsForeignKey=false)]
		public GeneralInfo GeneralInfo
		{
			get
			{
				return this._GeneralInfo.Entity;
			}
			set
			{
				GeneralInfo previousValue = this._GeneralInfo.Entity;
				if (((previousValue != value) 
							|| (this._GeneralInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GeneralInfo.Entity = null;
						previousValue.Login = null;
					}
					this._GeneralInfo.Entity = value;
					if ((value != null))
					{
						value.Login = this;
					}
					this.SendPropertyChanged("GeneralInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_Achievement", Storage="_Achievement", ThisKey="EmpID", OtherKey="EmpID", IsUnique=true, IsForeignKey=false)]
		public Achievement Achievement
		{
			get
			{
				return this._Achievement.Entity;
			}
			set
			{
				Achievement previousValue = this._Achievement.Entity;
				if (((previousValue != value) 
							|| (this._Achievement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Achievement.Entity = null;
						previousValue.Login = null;
					}
					this._Achievement.Entity = value;
					if ((value != null))
					{
						value.Login = this;
					}
					this.SendPropertyChanged("Achievement");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GeneralInfo")]
	public partial class GeneralInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmpID;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _DoB;
		
		private string _Edu_Qualification;
		
		private string _Designation;
		
		private string _Department;
		
		private string _Specialization;
		
		private System.Nullable<System.DateTime> _DoA;
		
		private string _Phone;
		
		private string _PhoneAlt;
		
		private string _Email;
		
		private string _Address;
		
		private EntityRef<Login> _Login;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmpIDChanging(string value);
    partial void OnEmpIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDoBChanging(System.Nullable<System.DateTime> value);
    partial void OnDoBChanged();
    partial void OnEdu_QualificationChanging(string value);
    partial void OnEdu_QualificationChanged();
    partial void OnDesignationChanging(string value);
    partial void OnDesignationChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    partial void OnSpecializationChanging(string value);
    partial void OnSpecializationChanged();
    partial void OnDoAChanging(System.Nullable<System.DateTime> value);
    partial void OnDoAChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnPhoneAltChanging(string value);
    partial void OnPhoneAltChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    #endregion
		
		public GeneralInfo()
		{
			this._Login = default(EntityRef<Login>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					if (this._Login.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoB", DbType="Date")]
		public System.Nullable<System.DateTime> DoB
		{
			get
			{
				return this._DoB;
			}
			set
			{
				if ((this._DoB != value))
				{
					this.OnDoBChanging(value);
					this.SendPropertyChanging();
					this._DoB = value;
					this.SendPropertyChanged("DoB");
					this.OnDoBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edu_Qualification", DbType="VarChar(MAX)")]
		public string Edu_Qualification
		{
			get
			{
				return this._Edu_Qualification;
			}
			set
			{
				if ((this._Edu_Qualification != value))
				{
					this.OnEdu_QualificationChanging(value);
					this.SendPropertyChanging();
					this._Edu_Qualification = value;
					this.SendPropertyChanged("Edu_Qualification");
					this.OnEdu_QualificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Designation", DbType="VarChar(50)")]
		public string Designation
		{
			get
			{
				return this._Designation;
			}
			set
			{
				if ((this._Designation != value))
				{
					this.OnDesignationChanging(value);
					this.SendPropertyChanging();
					this._Designation = value;
					this.SendPropertyChanged("Designation");
					this.OnDesignationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="VarChar(50)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specialization", DbType="VarChar(100)")]
		public string Specialization
		{
			get
			{
				return this._Specialization;
			}
			set
			{
				if ((this._Specialization != value))
				{
					this.OnSpecializationChanging(value);
					this.SendPropertyChanging();
					this._Specialization = value;
					this.SendPropertyChanged("Specialization");
					this.OnSpecializationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoA", DbType="Date")]
		public System.Nullable<System.DateTime> DoA
		{
			get
			{
				return this._DoA;
			}
			set
			{
				if ((this._DoA != value))
				{
					this.OnDoAChanging(value);
					this.SendPropertyChanging();
					this._DoA = value;
					this.SendPropertyChanged("DoA");
					this.OnDoAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(10)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneAlt", DbType="VarChar(10)")]
		public string PhoneAlt
		{
			get
			{
				return this._PhoneAlt;
			}
			set
			{
				if ((this._PhoneAlt != value))
				{
					this.OnPhoneAltChanging(value);
					this.SendPropertyChanging();
					this._PhoneAlt = value;
					this.SendPropertyChanged("PhoneAlt");
					this.OnPhoneAltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_GeneralInfo", Storage="_Login", ThisKey="EmpID", OtherKey="EmpID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Login Login
		{
			get
			{
				return this._Login.Entity;
			}
			set
			{
				Login previousValue = this._Login.Entity;
				if (((previousValue != value) 
							|| (this._Login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Login.Entity = null;
						previousValue.GeneralInfo = null;
					}
					this._Login.Entity = value;
					if ((value != null))
					{
						value.GeneralInfo = this;
						this._EmpID = value.EmpID;
					}
					else
					{
						this._EmpID = default(string);
					}
					this.SendPropertyChanged("Login");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Achievements")]
	public partial class Achievement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmpID;
		
		private string _Experience;
		
		private string _Research;
		
		private string _Book_Chapters;
		
		private string _Paper_Presented;
		
		private string _Conference;
		
		private string _Publications;
		
		private string _Projects;
		
		private string _Awards;
		
		private EntityRef<Login> _Login;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmpIDChanging(string value);
    partial void OnEmpIDChanged();
    partial void OnExperienceChanging(string value);
    partial void OnExperienceChanged();
    partial void OnResearchChanging(string value);
    partial void OnResearchChanged();
    partial void OnBook_ChaptersChanging(string value);
    partial void OnBook_ChaptersChanged();
    partial void OnPaper_PresentedChanging(string value);
    partial void OnPaper_PresentedChanged();
    partial void OnConferenceChanging(string value);
    partial void OnConferenceChanged();
    partial void OnPublicationsChanging(string value);
    partial void OnPublicationsChanged();
    partial void OnProjectsChanging(string value);
    partial void OnProjectsChanged();
    partial void OnAwardsChanging(string value);
    partial void OnAwardsChanged();
    #endregion
		
		public Achievement()
		{
			this._Login = default(EntityRef<Login>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					if (this._Login.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Experience", DbType="VarChar(20)")]
		public string Experience
		{
			get
			{
				return this._Experience;
			}
			set
			{
				if ((this._Experience != value))
				{
					this.OnExperienceChanging(value);
					this.SendPropertyChanging();
					this._Experience = value;
					this.SendPropertyChanged("Experience");
					this.OnExperienceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Research", DbType="VarChar(MAX)")]
		public string Research
		{
			get
			{
				return this._Research;
			}
			set
			{
				if ((this._Research != value))
				{
					this.OnResearchChanging(value);
					this.SendPropertyChanging();
					this._Research = value;
					this.SendPropertyChanged("Research");
					this.OnResearchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book_Chapters", DbType="VarChar(MAX)")]
		public string Book_Chapters
		{
			get
			{
				return this._Book_Chapters;
			}
			set
			{
				if ((this._Book_Chapters != value))
				{
					this.OnBook_ChaptersChanging(value);
					this.SendPropertyChanging();
					this._Book_Chapters = value;
					this.SendPropertyChanged("Book_Chapters");
					this.OnBook_ChaptersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paper_Presented", DbType="VarChar(MAX)")]
		public string Paper_Presented
		{
			get
			{
				return this._Paper_Presented;
			}
			set
			{
				if ((this._Paper_Presented != value))
				{
					this.OnPaper_PresentedChanging(value);
					this.SendPropertyChanging();
					this._Paper_Presented = value;
					this.SendPropertyChanged("Paper_Presented");
					this.OnPaper_PresentedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Conference", DbType="VarChar(MAX)")]
		public string Conference
		{
			get
			{
				return this._Conference;
			}
			set
			{
				if ((this._Conference != value))
				{
					this.OnConferenceChanging(value);
					this.SendPropertyChanging();
					this._Conference = value;
					this.SendPropertyChanged("Conference");
					this.OnConferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Publications", DbType="VarChar(MAX)")]
		public string Publications
		{
			get
			{
				return this._Publications;
			}
			set
			{
				if ((this._Publications != value))
				{
					this.OnPublicationsChanging(value);
					this.SendPropertyChanging();
					this._Publications = value;
					this.SendPropertyChanged("Publications");
					this.OnPublicationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Projects", DbType="VarChar(MAX)")]
		public string Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				if ((this._Projects != value))
				{
					this.OnProjectsChanging(value);
					this.SendPropertyChanging();
					this._Projects = value;
					this.SendPropertyChanged("Projects");
					this.OnProjectsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Awards", DbType="VarChar(MAX)")]
		public string Awards
		{
			get
			{
				return this._Awards;
			}
			set
			{
				if ((this._Awards != value))
				{
					this.OnAwardsChanging(value);
					this.SendPropertyChanging();
					this._Awards = value;
					this.SendPropertyChanged("Awards");
					this.OnAwardsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_Achievement", Storage="_Login", ThisKey="EmpID", OtherKey="EmpID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Login Login
		{
			get
			{
				return this._Login.Entity;
			}
			set
			{
				Login previousValue = this._Login.Entity;
				if (((previousValue != value) 
							|| (this._Login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Login.Entity = null;
						previousValue.Achievement = null;
					}
					this._Login.Entity = value;
					if ((value != null))
					{
						value.Achievement = this;
						this._EmpID = value.EmpID;
					}
					else
					{
						this._EmpID = default(string);
					}
					this.SendPropertyChanged("Login");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
